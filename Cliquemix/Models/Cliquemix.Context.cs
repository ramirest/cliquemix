//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cliquemix.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cliquemixEntities : DbContext
    {
        public cliquemixEntities()
            : base("name=cliquemixEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbAnunciante> tbAnunciante { get; set; }
        public virtual DbSet<tbAnuncianteDestaque> tbAnuncianteDestaque { get; set; }
        public virtual DbSet<tbAnuncianteDestaqueStatus> tbAnuncianteDestaqueStatus { get; set; }
        public virtual DbSet<tbAnuncianteEndereco> tbAnuncianteEndereco { get; set; }
        public virtual DbSet<tbAnuncianteTelefone> tbAnuncianteTelefone { get; set; }
        public virtual DbSet<tbAnuncioCategoria> tbAnuncioCategoria { get; set; }
        public virtual DbSet<tbAnuncioCodTemp> tbAnuncioCodTemp { get; set; }
        public virtual DbSet<tbAnuncioFuncionalidade> tbAnuncioFuncionalidade { get; set; }
        public virtual DbSet<tbAnuncioImg> tbAnuncioImg { get; set; }
        public virtual DbSet<tbAnuncioLog> tbAnuncioLog { get; set; }
        public virtual DbSet<tbAnuncioStatus> tbAnuncioStatus { get; set; }
        public virtual DbSet<tbBairro> tbBairro { get; set; }
        public virtual DbSet<tbBan> tbBan { get; set; }
        public virtual DbSet<tbBanner> tbBanner { get; set; }
        public virtual DbSet<tbBannerImg> tbBannerImg { get; set; }
        public virtual DbSet<tbBanTipo> tbBanTipo { get; set; }
        public virtual DbSet<tbCalculoCondicao> tbCalculoCondicao { get; set; }
        public virtual DbSet<tbCalculoCondicaoPagto> tbCalculoCondicaoPagto { get; set; }
        public virtual DbSet<tbCampanha> tbCampanha { get; set; }
        public virtual DbSet<tbCampanhaAnuncio> tbCampanhaAnuncio { get; set; }
        public virtual DbSet<tbCampanhaAnuncioConsumidor> tbCampanhaAnuncioConsumidor { get; set; }
        public virtual DbSet<tbCampanhaAnuncioStatus> tbCampanhaAnuncioStatus { get; set; }
        public virtual DbSet<tbCampanhaLocalizacao> tbCampanhaLocalizacao { get; set; }
        public virtual DbSet<tbCampanhaStatus> tbCampanhaStatus { get; set; }
        public virtual DbSet<tbCampanhaTmp> tbCampanhaTmp { get; set; }
        public virtual DbSet<tbCep> tbCep { get; set; }
        public virtual DbSet<tbCidade> tbCidade { get; set; }
        public virtual DbSet<tbCondicaoPagto> tbCondicaoPagto { get; set; }
        public virtual DbSet<tbConfigPadrao> tbConfigPadrao { get; set; }
        public virtual DbSet<tbConsumidor> tbConsumidor { get; set; }
        public virtual DbSet<tbCredito> tbCredito { get; set; }
        public virtual DbSet<tbCreditoCompra> tbCreditoCompra { get; set; }
        public virtual DbSet<tbCreditoDesconta> tbCreditoDesconta { get; set; }
        public virtual DbSet<tbCreditoPromocional> tbCreditoPromocional { get; set; }
        public virtual DbSet<tbCreditoStatus> tbCreditoStatus { get; set; }
        public virtual DbSet<tbDestaque> tbDestaque { get; set; }
        public virtual DbSet<tbDestaqueAnunciante> tbDestaqueAnunciante { get; set; }
        public virtual DbSet<tbDestaqueDuracao> tbDestaqueDuracao { get; set; }
        public virtual DbSet<tbEstado> tbEstado { get; set; }
        public virtual DbSet<tbFuncionalidade> tbFuncionalidade { get; set; }
        public virtual DbSet<tbFuncionalidadeLog> tbFuncionalidadeLog { get; set; }
        public virtual DbSet<tbLogSistema> tbLogSistema { get; set; }
        public virtual DbSet<tbPacoteClique> tbPacoteClique { get; set; }
        public virtual DbSet<tbPais> tbPais { get; set; }
        public virtual DbSet<tbPermissao> tbPermissao { get; set; }
        public virtual DbSet<tbPermissaoGrupo> tbPermissaoGrupo { get; set; }
        public virtual DbSet<tbPermissaoSubGrupo> tbPermissaoSubGrupo { get; set; }
        public virtual DbSet<tbPontosRede> tbPontosRede { get; set; }
        public virtual DbSet<tbPremio> tbPremio { get; set; }
        public virtual DbSet<tbPremioConsumidor> tbPremioConsumidor { get; set; }
        public virtual DbSet<tbPremioDestaque> tbPremioDestaque { get; set; }
        public virtual DbSet<tbPremioImg> tbPremioImg { get; set; }
        public virtual DbSet<tbPremioNivel> tbPremioNivel { get; set; }
        public virtual DbSet<tbRamoAtividade> tbRamoAtividade { get; set; }
        public virtual DbSet<tbTipoLogradouro> tbTipoLogradouro { get; set; }
        public virtual DbSet<tbTos> tbTos { get; set; }
        public virtual DbSet<tbUsers> tbUsers { get; set; }
        public virtual DbSet<tbUsersLogAcesso> tbUsersLogAcesso { get; set; }
        public virtual DbSet<tbUsersPermissao> tbUsersPermissao { get; set; }
        public virtual DbSet<tbUsersTipo> tbUsersTipo { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tbAnuncio> tbAnuncio { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
